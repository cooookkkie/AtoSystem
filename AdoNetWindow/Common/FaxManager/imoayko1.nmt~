using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Text.RegularExpressions;


namespace AdoNetWindow.Common.FaxManager
{
    public partial class FaxManager : Form
    {
        private string stFolderPath1;
        private System.IO.DirectoryInfo di;

        public FaxManager()
        {
            InitializeComponent();
        }

        private void FaxManager_Load(object sender, EventArgs e)
        {
            cbYear.Text = DateTime.Now.Year.ToString();
            cbMonth.Text = DateTime.Now.Month.ToString();
            cbDay.Text = DateTime.Now.Day.ToString();
        }

        #region Method
        private bool isValidate()
        {
            bool isFlag = false;

            if (dgvFaxNumber.Rows.Count == 0)
            {
                MessageBox.Show("수신목록을 작성해주세요.");
                return isFlag;
            }
            //첨부파일
            /*for (int i = 0; i < dgvAttachments.Rows.Count; i++)
            {
                dgvAttachments.Rows[i].Cells[0].Value = false;
            }
            for (int i = 0; i < dgvAttachments.Rows.Count; i++)
            {
                var strFile = dgvAttachments.Rows[i].Cells["path"].Value;
                if (strFile == null || string.IsNullOrEmpty(strFile.ToString()))
                {
                    MessageBox.Show("작성되지 않은 첨부파일 내역은 삭제해주시기 바랍니다.");
                    return isFlag;
                }
                else
                {
                    FileInfo fileInfo = new FileInfo(strFile.ToString());
                    if (!fileInfo.Exists)
                    {
                        MessageBox.Show("존재하지 않는 파일입니다. \t 파일 : " + strFile.ToString());
                        return isFlag;
                    }
                    else
                    {
                        dgvAttachments.Rows[i].Cells[0].Value = true;
                    }
                }
            }*/
            //수신목록
            for (int i = 0; i < dgvFaxNumber.Rows.Count; i++)
            {
                dgvFaxNumber.Rows[i].Cells[0].Value = false;
            }
            for (int i = 0; i < dgvFaxNumber.Rows.Count; i++)
            {
                var fax_number = dgvFaxNumber.Rows[i].Cells["fax_number"].Value;
                if (fax_number == null || string.IsNullOrEmpty(fax_number.ToString()))
                {
                    MessageBox.Show("작성되지 않은 수신목록 내역은 삭제해주시기 바랍니다.");
                    return isFlag;
                }
                else
                {
                    fax_number = fax_number.ToString().Replace("-", "").Trim();
                    if (fax_number.ToString().Length == 10)
                    {
                        Regex regex = new Regex(@"[0-9]{3}[0-9]{3}[0-9]{4}$");

                        Match m = regex.Match(fax_number.ToString());
                        if (!m.Success)
                        {
                            MessageBox.Show("전화번호 형식에 맞지 않습니다. \t FAX : " + fax_number.ToString());
                            return isFlag;
                        }
                        else
                        {
                            dgvFaxNumber.Rows[i].Cells[0].Value = true;
                        }
                    }
                    else if (fax_number.ToString().Length == 11)
                    {
                        Regex regex = new Regex(@"[0-9]{3}[0-9]{4}[0-9]{4}$");

                        Match m = regex.Match(fax_number.ToString());
                        if (!m.Success)
                        {
                            MessageBox.Show("전화번호 형식에 맞지 않습니다. \t FAX : " + fax_number.ToString());
                            return isFlag;
                        }
                        else
                        {
                            dgvFaxNumber.Rows[i].Cells[0].Value = true;
                        }
                    }
                    else
                    {
                        MessageBox.Show("전화번호 형식에 맞지 않습니다. \t FAX : " + fax_number.ToString());
                        return isFlag;
                    }
                }
            }
            isFlag = true;
            return isFlag;
        }

        #endregion

        #region (Radio)Button event
        private void btnSend_Click(object sender, EventArgs e)
        {
            if (isValidate())
            {
                Libs.Tools.FaxSender fs = new Libs.Tools.FaxSender(dgvFaxNumber);
                for (int i = 0; i < dgvFaxNumber.Rows.Count; i++)
                {
                    string fax_number = dgvFaxNumber.Rows[i].Cells["fax_number"].Value.ToString();
                    string[] file = new string[dgvAttachments.Rows.Count];
                    int idx = 0;
                    foreach (DataGridViewRow row in dgvAttachments.Rows)
                    {
                        file[idx] = row.Cells["path"].Value.ToString();
                        idx++;
                    }

                    if (rbImmediately.Checked)
                    {
                        fs.SendFax(fax_number, file);
                    }
                    else if (rbReservation.Checked)
                    {
                        string send_date = new DateTime(Convert.ToInt16(cbYear.Text), Convert.ToInt16(cbMonth.Text), Convert.ToInt16(cbDay.Text)
                                                        , Convert.ToInt16(cbHour.Text), Convert.ToInt16(cbMinute.Text), 0).ToString();
                        fs.SendFax(fax_number, file, true, send_date);
                    }

                }

                /*Libs.ftpCommon fs = new Libs.ftpCommon();
                for (int i = 0; i < dgvFaxNumber.Rows.Count; i++)
                {
                    string send_date = new DateTime(Convert.ToInt16(cbYear.Text), Convert.ToInt16(cbMonth.Text), Convert.ToInt16(cbDay.Text)
                                                        , Convert.ToInt16(cbHour.Text), Convert.ToInt16(cbMinute.Text), 0).ToString();
                    DateTime sendDate;
                    DateTime.TryParse(send_date, out sendDate);

                    if (fs.FaxSender(dgvFaxNumber.Rows[i].Cells["fax_ number"].Value.ToString(), dgvFaxNumber.Rows[i].Cells["attachment_path"].Value.ToString(), sendDate, rbReservation.Checked))
                        dgvFaxNumber.Rows[i].Cells["status"].Value = "성공";
                    else
                        dgvFaxNumber.Rows[i].Cells["status"].Value = "실패";
                }*/
            }
        }

        

        private void btnAttachmentSelect_Click(object sender, EventArgs e)
        {
            using (OpenFileDialog dlgOpen = new OpenFileDialog())
            {
                dlgOpen.Filter = "모든 파일 (*.*) | *.*";
                dlgOpen.Filter += "|이미지 (*.jpg, *.gif, *.png) | *.jpg; *.gif; *.png;";
                dlgOpen.Title = "Files";
                dlgOpen.Multiselect = true; // 파일 다중 선택        
                //dlgOpen.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.MyMusic);
                if (dlgOpen.ShowDialog() == DialogResult.OK)
                {
                    for (int i = 0; i < dlgOpen.FileNames.Length; i++)
                    {
                        int n = dgvAttachments.Rows.Add();
                        dgvAttachments.Rows[n].Cells["path"].Value = dlgOpen.FileNames[i];
                    }
                }
            }
        }

        private void rbReservation_Click(object sender, EventArgs e)
        {
            if (rbImmediately.Checked)
            {
                cbYear.Enabled = false;
                cbMonth.Enabled = false;
                cbDay.Enabled = false;
                cbHour.Enabled = false;
                cbMinute.Enabled = false;
            }
            else if (rbReservation.Checked)
            {
                cbYear.Enabled = true;
                cbMonth.Enabled = true;
                cbDay.Enabled = true;
                cbHour.Enabled = true;
                cbMinute.Enabled = true;
            }
        }

        private void btnAttachmentPlus_Click(object sender, EventArgs e)
        {
            int n = dgvAttachments.Rows.Add();
        }

        private void btnAttachmentMinus_Click(object sender, EventArgs e)
        {
            if (dgvAttachments.Rows.Count > 0)
            {
                dgvAttachments.Rows.Remove(dgvAttachments.Rows[dgvAttachments.Rows.Count - 1]);
            }
        }

        private void btnFaxnumberPlus_Click(object sender, EventArgs e)
        {
            int n = dgvFaxNumber.Rows.Add();
        }

        private void btnFaxnumberMinus_Click(object sender, EventArgs e)
        {
            if (dgvFaxNumber.Rows.Count > 0)
            {
                dgvFaxNumber.Rows.Remove(dgvFaxNumber.Rows[dgvFaxNumber.Rows.Count - 1]);
            }
        }
        #endregion

        private void dgvAttachments_DragDrop(object sender, DragEventArgs e)
        {
            string[] files = (string[])e.Data.GetData(DataFormats.FileDrop);
            foreach (string file in files)
            {
                int n = dgvAttachments.Rows.Add();
                dgvAttachments.Rows[n].Cells["path"].Value = file;
            }
        }

        private void dgvAttachments_DragEnter(object sender, DragEventArgs e)
        {
            if (e.Data.GetDataPresent(DataFormats.FileDrop)) e.Effect = DragDropEffects.Copy;
        }

        private void dgvFaxNumber_CellMouseDoubleClick(object sender, DataGridViewCellMouseEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                if (dgvFaxNumber.Columns[e.ColumnIndex].Name == "file_path")
                {
                    if (dgvFaxNumber.Rows[e.RowIndex].Cells[e.ColumnIndex].Value == null)
                        dgvFaxNumber.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = "";
                    string file_path = dgvFaxNumber.Rows[e.RowIndex].Cells[e.ColumnIndex].Value.ToString();
                    using (OpenFileDialog dlgOpen = new OpenFileDialog())
                    {
                        dlgOpen.Filter = "모든 파일 (*.*) | *.*";
                        dlgOpen.Filter += "|이미지 (*.jpg, *.gif, *.png) | *.jpg; *.gif; *.png;";
                        dlgOpen.Title = "Files";
                        dlgOpen.Multiselect = true; // 파일 다중 선택        
                                                    //dlgOpen.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.MyMusic);
                        if (dlgOpen.ShowDialog() == DialogResult.OK)
                        {

                            for (int i = 0; i < dlgOpen.FileNames.Length; i++)
                            {
                                file_path += "^" + dlgOpen.FileNames[i];
                            }
                        }
                    }
                    dgvFaxNumber.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = file_path;
                }
            }
        }
    }
}
